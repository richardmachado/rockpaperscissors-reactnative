{"version":3,"sources":["src/PlayScreen.js","App.js","src/img/rock.png","src/img/scissors.png","src/img/paper.png"],"names":["rock","require","scissors","paper","BgColors","styles","StyleSheet","create","container","alignItems","justifyContent","flex","counter","fontSize","color","sign","width","height","button","position","bottom","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","prv","clearTimeout","View","style","compose","backgroundColor","Image","source","Math","floor","random","Button","onPress","title","Text","App","play","setPlay","header","marginBottom","marginTop","module","exports"],"mappings":"iMAGMA,EAAOC,EAAQ,IACfC,EAAWD,EAAQ,IACnBE,EAAQF,EAAQ,IAGhBG,EAAW,CAAC,UAAW,UAAW,WAyClCC,EAASC,IAAWC,OAAO,CAC7BC,UAAW,CACPC,WAAY,SACZC,eAAgB,SAChBC,KAAM,GAEVC,QAAS,CACLC,SAAU,IACVC,MAAM,SAGVC,KAAM,CACFC,MAAO,IACPC,OAAQ,KAEZC,OAAQ,CACJC,SAAU,WACVC,OAAO,MAIAC,EApDI,WAAO,IAAD,EACSC,mBAAS,GADlB,WACdV,EADc,KACLW,EADK,KAerB,OAbAC,qBAAU,WAEN,KAAIZ,EAAU,GAAd,CAEA,IAAMa,EAAQC,YAAW,WACrBH,GAAW,SAACI,GAAD,OAASA,EAAM,OAC3B,KAEH,OAAO,WACHC,aAAaH,OAElB,CAACb,IAGF,kBAACiB,EAAA,EAAD,CAAMC,MAAOxB,IAAWyB,QAAQ,CAACC,gBAAiB5B,EAASQ,EAAQ,IAAKP,EAAOG,YAC5EI,EAAU,EACT,oCACE,kBAACqB,EAAA,EAAD,CAAOH,MAAOzB,EAAOU,KAAMmB,OAzBpB,CAAClC,EAAMG,EAAOD,GACdiC,KAAKC,MAAsB,EAAhBD,KAAKE,aAyBvB,kBAACR,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QAClB,kBAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,EAAW,IAAIiB,MAAM,iBAIhD,kBAACC,EAAA,EAAD,CAAMX,MAAOzB,EAAOO,SAAUA,KCtCzB,SAAS8B,IAAO,IAAD,EACJpB,oBAAS,GADL,WACrBqB,EADqB,KACfC,EADe,KAG5B,OACED,EACE,kBAAC,EAAD,MAEM,kBAACd,EAAA,EAAD,CAAMC,MAAOzB,EAAOG,WAC1B,kBAACiC,EAAA,EAAD,CAAMX,MAAOzB,EAAOwC,QAApB,uBACA,kBAACJ,EAAA,EAAD,CAAMX,MAAO,CAAEjB,SAAU,KAAzB,8BACA,kBAACgB,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QAClB,kBAACoB,EAAA,EAAD,CAAQE,MAAM,OAAOD,QAAS,kBAAIK,GAAQ,QAWlD,IAAMvC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTG,KAAM,EACNqB,gBAAiB,OACjBvB,WAAY,SACZC,eAAgB,UAElBmC,OAAQ,CACNhC,SAAU,GACViC,aAAc,IAEhB5B,OAAQ,CACNc,gBAAgB,YAChBe,UAAW,GACX/B,MAAM,Q,uDCzCVgC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.033ee833.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { View, Text, StyleSheet, Button, Image } from 'react-native'\r\n\r\nconst rock = require('./img/rock.png');\r\nconst scissors = require(\"./img/scissors.png\");\r\nconst paper = require(\"./img/paper.png\");\r\n\r\n\r\nconst BgColors = ['#1abc9c', '#3498db', '#9b59b6'];\r\n    \r\n    \r\nconst randomImg = () => {\r\n    const emojis = [rock, paper, scissors];\r\n    const random = Math.floor(Math.random() * 3);\r\n    return emojis[random ]\r\n}\r\n\r\n\r\nconst PlayScreen = () => {\r\n    const [counter, setCounter] = useState(3);\r\n    useEffect(() => {\r\n        \r\n        if (counter < 1) return;\r\n\r\n        const timer = setTimeout(() => {\r\n            setCounter((prv) => prv - 1)\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        };\r\n    }, [counter])\r\n\r\n    return (\r\n      <View style={StyleSheet.compose({backgroundColor: BgColors[counter-1]}, styles.container)}>\r\n        {counter < 1 ? (\r\n          <>\r\n            <Image style={styles.sign} source={randomImg()} />\r\n            <View style={styles.button}>\r\n              <Button onPress={() => setCounter(3)} title=\"Play Again\" />\r\n            </View>\r\n          </>\r\n        ) : (\r\n          <Text style={styles.counter}>{counter}</Text>\r\n        )}\r\n      </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n    },\r\n    counter: {\r\n        fontSize: 150,\r\n        color:\"white\"\r\n\r\n    },\r\n    sign: {\r\n        width: 220,\r\n        height: 220,\r\n    },\r\n    button: {\r\n        position: \"absolute\",\r\n        bottom:40,\r\n    }\r\n})\r\n\r\nexport default PlayScreen;\r\n","\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport PlayScreen from \"\\./src/PlayScreen\";\n\nexport default function App() {\n  const [play, setPlay] = useState(false);\n\n  return (\n    play ? (\n      <PlayScreen />\n      ): (\n            <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{ fontSize: 65 }}>✊ ✋ ✌️</Text>\n      <View style={styles.button}>\n        <Button title=\"Play\" onPress={()=>setPlay(true)} /> \n      </View>\n      \n    </View>\n      )\n  \n\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 30,\n    marginBottom: 10,\n  },\n  button: {\n    backgroundColor:\"lightblue\",\n    marginTop: 30,\n    width:250,\n  }\n  \n});\n","module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";"],"sourceRoot":""}